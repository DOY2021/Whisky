# Generated by Django 3.2.4 on 2021-10-16 02:05

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Reaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_title', models.CharField(max_length=255)),
                ('review_body', models.TextField()),
                ('avg_rating', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('nose_rating', models.IntegerField(default=100, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('taste_rating', models.IntegerField(default=100, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('finish_rating', models.IntegerField(default=100, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kor_tag', models.CharField(max_length=20)),
                ('eng_tag', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Whisky',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_eng', models.CharField(blank=True, max_length=100, null=True)),
                ('name_kor', models.CharField(max_length=100, null=True)),
                ('region', models.CharField(max_length=100, null=True)),
                ('distillery', models.CharField(blank=True, max_length=100, null=True)),
                ('bottler', models.CharField(blank=True, max_length=100, null=True)),
                ('bottling_series', models.CharField(blank=True, max_length=100, null=True)),
                ('age', models.IntegerField(null=True)),
                ('cask_type', models.CharField(blank=True, max_length=100, null=True)),
                ('alcohol', models.FloatField(null=True)),
                ('size', models.IntegerField(blank=True, null=True)),
                ('single_cask', models.BooleanField(default=False)),
                ('cask_number', models.IntegerField(blank=True, null=True)),
                ('non_chillfiltered', models.BooleanField(default=False, null=True)),
                ('natural_color', models.BooleanField(default=False, null=True)),
                ('independent_whisky', models.BooleanField(default=False, null=True)),
                ('whisky_detail', models.TextField(blank=True, null=True)),
                ('contributor', models.CharField(max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('whisky_ratings', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('rating_counts', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('confirmed', models.BooleanField(default=False)),
                ('updated', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='WhiskyCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('whisky', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.whisky')),
            ],
        ),
        migrations.CreateModel(
            name='WhiskyImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(blank=True, null=True, upload_to='', validators=[django.core.validators.validate_image_file_extension])),
                ('whisky', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='whisky_image', related_query_name='whisky_image', to='api.whisky')),
            ],
        ),
        migrations.AddField(
            model_name='whisky',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='category', to='api.whiskycategory'),
        ),
        migrations.CreateModel(
            name='ReactionImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(blank=True, null=True, upload_to='', validators=[django.core.validators.validate_image_file_extension])),
                ('reaction', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reaction_image', related_query_name='reaction_image', to='api.reaction')),
            ],
        ),
        migrations.CreateModel(
            name='ReactionComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_body', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.reaction')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='reaction',
            name='flavor_tag',
            field=models.ManyToManyField(related_name='flavor_tag', to='api.Tag'),
        ),
        migrations.AddField(
            model_name='reaction',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='reaction',
            name='whisky',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reactions', related_query_name='reactions', to='api.whisky'),
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nickname', models.CharField(max_length=64, unique=True)),
                ('bio', models.CharField(blank=True, max_length=240)),
                ('profile_photo', models.FileField(blank=True, null=True, upload_to='')),
                ('credit', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('tier', models.CharField(max_length=64, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('follower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='is_following', to='api.profile')),
                ('following', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='is_follower', to='api.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('whisky', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.whisky')),
            ],
        ),
    ]
